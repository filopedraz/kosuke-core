services:
  postgres:
    image: postgres:16.4-alpine
    container_name: kosuke_postgres
    env_file:
      - .env
    ports:
      - '54323:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kosuke_network

  agent:
    build:
      context: ./agent
      dockerfile: Dockerfile
    container_name: kosuke_agent
    ports:
      - '8001:8000'
    volumes:
      - ./agent:/app:cached
      - ./projects:/app/projects:cached
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./agent/.env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - NEXTJS_URL=http://host.docker.internal:3000
      - WEBHOOK_SECRET=dev-secret-change-in-production
      - HOST_WORKSPACE_DIR=${PWD}
    depends_on:
      - postgres
    networks:
      - kosuke_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'python',
          '-c',
          "import requests; requests.get('http://localhost:8000/api/health/simple')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
  next_build_cache:

networks:
  kosuke_network:
    name: kosuke_network
    driver: bridge
    attachable: true
